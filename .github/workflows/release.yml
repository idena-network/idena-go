name: Release Idena

on:
  push:
    tags:
      - "v*"
    branches:
      - build-linux-aarch64
defaults:
  run:
    shell: bash

jobs:
  build:
    strategy:
      matrix:
        go-version: [1.17.x]
        os: ['ubuntu-18.04', 'windows-latest', 'macos-latest']
    runs-on: ${{ matrix.os }}

    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Get Sources
        uses: actions/checkout@v3

      - name: Get tag
        id: tag
        uses: dawidd6/action-get-tag@v1

      - name: Get asset name
        id: asset
        run: |
          gitTag=${{ steps.tag.outputs.tag }}
          tag=${gitTag:1}
          if [[ "$RUNNER_OS" == "Linux" ]]; then
            asset_name="idena-node-linux-${tag}"
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            asset_name="idena-node-mac-${tag}"
          else
            asset_name="idena-node-win-${tag}.exe"
          fi
          echo "GIT_TAG=${tag}" >> $GITHUB_ENV
          echo "ASSET_NAME=${asset_name}" >> $GITHUB_ENV

      - name: Test
        run: go test -v ./...

      - name: Build
        run: go build -ldflags "-X main.version=${{ env.GIT_TAG }}" -o=builds/${{ env.ASSET_NAME }}

      - name: Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          draft: true
          files: builds/${{ env.ASSET_NAME }}
  build-linux-aarch64:
      runs-on: ubuntu-latest
      strategy:
        matrix:
          goos: [ linux ]
          goarch: [ arm64 ]
      steps:
        - uses: actions/checkout@v3
        #- name: Get tag
        #  id: tag
        #  uses: dawidd6/action-get-tag@v1
        - uses: wangyoucao577/go-release-action@v1
          with:
            pre_command: "apt-get update && apt-get -y install gcc-aarch64-linux-gnu && export CGO_ENABLED=1"
            github_token: ${{ secrets.GITHUB_TOKEN }}
            release_tag: v1.0.2-rc2
            goos: ${{ matrix.goos }}
            goarch: ${{ matrix.goarch }}
            goversion: 1.19
            binary_name: "idena-node-linux-aarch64"